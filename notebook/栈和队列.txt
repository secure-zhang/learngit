数据结构基础:
	就是数据以什么方式存储在计算机里面
	数据结构就是合计数据以何种方式组织并 存储在计算机中
	比如: 列表, 集合与字典等都是一种数据结构
程序 = 数据结构 + 算法

列表: 在其他编程语言上成为"数组",是一种基本的数据结构类型
关于列表的问题:
	1. 列表中元素是如何存储的?
		根据索引进行存储,数据
	2. 列表提供了哪些基本的操作?
		append extend pop insert update []
	3. 这些操作的时间复杂的是多少?
		O1 和 On 插入,删除这些时间复杂度为On,添加弹出为o1

栈 Stack
		是一个数据集合,只能在一端进行插入或删除操作的列表
		栈的特点: 后进先出 (last-in,first-out)
		示例:
			进栈push-->
					栈顶				栈底
					An ... 	A3	 A2 	A1		
			出栈pop<--
栈的概念:
	栈顶:	最后进入数据
	栈底:	最先进入的数据
栈的基本操作:
	进栈(压栈): push
	出栈	  : pop
	取栈顶	  : gettop  li[-1]
	
队列Queue:
	是一个数据集合,仅允许在列表的一段进行插入,另一端进行查询
	进行插入的一端称为队尾(rear),插入的动作称为进队或入队
	进行删除的一端称为队头(front),删除的动作称为出队
	队列的性质: 先进先出(first-in,first-out)
	双向队列: 队列的俩段都允许进行进队和出队操作
	示例
		队头								队尾
		出队<--  A1		A2		A3	...		An  <--入队
队列能否简单的用列表实现,为什么?

使用方法: from collections import deque
	1. 创建队列: queue = deque(li)
	2. 进队	   : append(右进队)			
	3. 出队    : popleft(左出队)
	4. 双向队列队首进队: appendleft (左进队)
	5. 双向队列队尾出队: pop(右出队)